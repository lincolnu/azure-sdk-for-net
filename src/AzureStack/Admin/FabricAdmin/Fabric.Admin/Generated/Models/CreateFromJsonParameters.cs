// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Fabric.Admin.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters that fully define a new cluster to be created.
    /// </summary>
    public partial class CreateFromJsonParameters
    {
        /// <summary>
        /// Initializes a new instance of the CreateFromJsonParameters class.
        /// </summary>
        public CreateFromJsonParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateFromJsonParameters class.
        /// </summary>
        /// <param name="tORSwitchBGPASN">TOR switch ASN.</param>
        /// <param name="softwareBGPASN">Software ASN.</param>
        /// <param name="tORSwitchBGPPeerIP">TOR switch IP.</param>
        /// <param name="physicalNodes">The list of nodes.</param>
        /// <param name="netQosPriority">QoS policy.</param>
        public CreateFromJsonParameters(string tORSwitchBGPASN = default(string), string softwareBGPASN = default(string), IList<string> tORSwitchBGPPeerIP = default(IList<string>), CreateScaleUnitFromJsonNetworkDefinition infrastructureNetwork = default(CreateScaleUnitFromJsonNetworkDefinition), CreateScaleUnitFromJsonNetworkDefinition storageNetwork = default(CreateScaleUnitFromJsonNetworkDefinition), IList<CreateScaleUnitFromJsonNodeParameters> physicalNodes = default(IList<CreateScaleUnitFromJsonNodeParameters>), int? netQosPriority = default(int?))
        {
            TORSwitchBGPASN = tORSwitchBGPASN;
            SoftwareBGPASN = softwareBGPASN;
            TORSwitchBGPPeerIP = tORSwitchBGPPeerIP;
            InfrastructureNetwork = infrastructureNetwork;
            StorageNetwork = storageNetwork;
            PhysicalNodes = physicalNodes;
            NetQosPriority = netQosPriority;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets TOR switch ASN.
        /// </summary>
        [JsonProperty(PropertyName = "TORSwitchBGPASN")]
        public string TORSwitchBGPASN { get; set; }

        /// <summary>
        /// Gets or sets software ASN.
        /// </summary>
        [JsonProperty(PropertyName = "SoftwareBGPASN")]
        public string SoftwareBGPASN { get; set; }

        /// <summary>
        /// Gets or sets TOR switch IP.
        /// </summary>
        [JsonProperty(PropertyName = "TORSwitchBGPPeerIP")]
        public IList<string> TORSwitchBGPPeerIP { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InfrastructureNetwork")]
        public CreateScaleUnitFromJsonNetworkDefinition InfrastructureNetwork { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StorageNetwork")]
        public CreateScaleUnitFromJsonNetworkDefinition StorageNetwork { get; set; }

        /// <summary>
        /// Gets or sets the list of nodes.
        /// </summary>
        [JsonProperty(PropertyName = "physicalNodes")]
        public IList<CreateScaleUnitFromJsonNodeParameters> PhysicalNodes { get; set; }

        /// <summary>
        /// Gets or sets qoS policy.
        /// </summary>
        [JsonProperty(PropertyName = "NetQosPriority")]
        public int? NetQosPriority { get; set; }

    }
}
